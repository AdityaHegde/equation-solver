{
  "lex" : {
    "rules" : [
      ["\\s+",                 ""],
      ["[a-z][a-z_0-9]*",      "return 'VAR'"],
      ["[0-9]+(?:\\.[0-9]+)?", "return 'NUM'"],
      ["\\+",                  "return '+'"],
      ["-",                    "return '-'"],
      ["\\*",                  "return '*'"],
      ["\\/",                  "return '/'"],
      ["\\^",                  "return '^'"],
      ["\\(",                  "return '('"],
      ["\\)",                  "return ')'"],
      ["$",                    "return 'EOF'"]
    ]
  },

  "operators" : [
    ["left", "+", "-"],
    ["left", "NUM"],
    ["left", "*", "/"],
    ["left", "^"],
    ["left", "UMINUS"]
  ],

  "bnf" : {
    "expressions" : [["e EOF", "$1.sortAndStringify();return $1;"]],
    "e" : [
      [ "e + e",   "$$ = yy.addTerms($1, $3);" ],
      [ "e - e",   "$3.coeff = -$3.coeff; $$ = yy.addTerms($1, $3);" ],
      [ "e * e",   "$$ = yy.multiplyTerm($1, $3);" ],
      [ "e / e",   "$3.pwr = -$3.pwr; $$ = yy.multiplyTerm($1, $3);" ],
      [ "e ^ NUM", "$1.pwr *= Number($3); $$ = $1;" ],
      [ "NUM * e", "$3.coeff *= Number($1); $$ = $3;" ],
      [ "- e",     "$2.coeff = -$2.coeff; $$ = $2;", {"prec": "UMINUS"} ],
      [ "( e )",   "$$ = $2;" ],
      [ "NUM",     "$$ = new yy.TermNumber({coeff : Number(yytext)});" ],
      [ "VAR",     "$$ = new yy.Term({vari : yytext});" ]
    ]
  }
}
